<!doctype html>
<html class="no-js">

    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>添加文章</title>
        <meta name="description" content="添加文章">
        <meta name="keywords" content="form">
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
        <meta name="renderer" content="webkit">
        <meta http-equiv="Cache-Control" content="no-siteapp" />
        <link rel="icon" type="image/png" href="/Amassets/i/favicon.png">
        <script type="text/javascript" src="/js/jquery.min.js"></script>
        <link rel="stylesheet" type="text/css" href="/css/bootstrap.min.css" />
        <script type="text/javascript" href="/js/bootstrap.min.js"></script>
        <style type="text/css">
            * {
                margin: 0;
                padding: 0;
            }

            #content {
                width: 750px;
                height: 100%;
                margin: 70px auto;
                border: 1px solid blue;
                border-radius: 5px;
            }

            .header h2 {
                padding: 15px 0;
            }

        </style>
    </head>

    <body>
        <!-- content start -->
        <div id="content">
            <div class="container-fluid">
                <div class="row">
                    <div>
                        <div class="card">
                            <div class="header col-md-offset-2">
                                <h2>添加文章</h2>
                            </div>
                            <div class="content">
                                <form class="form-horizontal">
                                    <div class="form-group">
                                        <label for="article-title" class="col-md-2 control-label">文章标题</label>
                                        <div class="col-md-10">
                                            <input type="text" id="article-title" name="title" class="form-control" placeholder="输入文章标题" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="article-content" class="col-md-2 control-label">文章内容</label>
                                        <div id="myEditor" class="col-md-10"></div>
                                    </div>
                                    <div class="form-group">
                                        <label for="article-cover" class="col-md-2 control-label">封面图片</label>
                                        <div class="col-md-10">
                                            <input type="file" id="article-cover" name="cover" class="form-control">
                                        </div>
                                    </div>
                                    <button type="button" id="submit" class="btn btn-fill btn-info">上传文章</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- content end -->
    </body>
     <!-- wangEditor init config -->
    <script type="text/javascript" src="/js/wangEditor.min.js"></script>
    <script type="text/javascript">
        (function() {
            var E = window.wangEditor
            console.log(E)
            var editor = new E("#myEditor")
            //配置服务短地址
            editor.customConfig.uploadImgServer = '/upload/singleUpload'
            editor.customConfig.uploadImgMaxSize = 5 * 1024 * 1024 // 5M
            editor.customConfig.uploadImgMaxLength = 1 // 一张
            editor.customConfig.uploadImgHooks = {
                before: function(xhr, editor, files) {
                    // 图片上传之前触发 
                    // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，files 是选择的图片文件 
                    // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传 
                    // return { // prevent: true, // msg: '放弃上传' 
                    // } }, success: function (xhr, editor, result) { 
                    // 图片上传并返回结果，图片插入成功之后触发 // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果 },
                    console.log(xhr,files)
                },

                timeout: function(xhr, editor) {
                    // 图片上传超时时触发
                    // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象
                    console.log('timeout')
                },

                fail: function(xhr, editor, result) {
                    // 图片上传并返回结果，但图片插入错误时触发
                    // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果
                },
                error: function(xhr, editor) {
                    console.log(xhr)
                    // 图片上传出错时触发
                    // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象
                },
                // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置
                // （但是，服务器端返回的必须是一个 JSON 格式字符串！！！否则会报错）
                customInsert: function(insertImg, result, editor) {
                    // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）
                    // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果

                    // 举例：假如上传图片成功后，服务器端返回的是 {url:'....'} 这种格式，即可这样插入图片：
                    console.log(result)
                    var url = result.url
                    insertImg(url)

                    // result 必须是一个 JSON 格式字符串！！！否则报错
                }
            }
            editor.create()
            // 上传文章
            editor.txt.html('<p>请输入文章内容</p>');
            var btn = document.querySelector('#submit');
            btn.addEventListener('click',function(e){
                var title=document.forms[0].title.value,
                    content=editor.txt.html(),
                    cover=document.forms[0].cover.files[0],
                    action='http://localhost:3001/article';
                console.log(title,content,cover);
                var form = new FormData();//新建formData存储数据
                form.append("title",title);
                form.append("content",content);
                form.append("cover",cover);
                $.ajax({
                    url: action,
                    type: "POST",
                    data: form,
                    async: true,
                    processData: false,//必须false才会避开jQuery对 formdata 的默认处理 
                    contentType: false,//必须false才会自动加上正确的Content-Type 
                }).done(function(){alert('1')}).fail(function(){alert('2')});
                return false;
            })
            
        })()
    </script>
</html>
